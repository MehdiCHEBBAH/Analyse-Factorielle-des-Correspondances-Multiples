R = c(1:40),
N = c(1:40))
for (i in 1:40) {
y1[i,1] = ((i-1) %/% 4)+1
}
levels(y1) = c("B", "M", "TB", "TM")
View(y1)
for (i in 1:40) {
y1[i,2] = switch(((i-1) %% 4)+1, "B", "M", "TB", "TM")
}
View(y1)
for (i in 1:40) {
y1[i,1] = ((i-1) %/% 4)+1
}
View(y1)
for(i in 1:nrow(y)){
for (j in 1:ncol(y)) {
y1[i,j+2] = y[i,j]
}
}
View(y1)
View(y)
y1 = data.frame(Q = c(1:40),
R = c(1:40),
N = c(1:40))
for (i in 1:40) {
y1[i,1] = ((i-1) %/% 4)+1
}
levels(y1) = c("B", "M", "TB", "TM")
for (i in 1:40) {
y1[i,2] = switch(((i-1) %% 4)+1, "B", "M", "TB", "TM")
}
for(i in 1:nrow(y)){
for (j in 1:ncol(y)) {
y1[i+j-1,3] = y[i,j]
}
}
View(y1)
y1 = data.frame(Q = c(1:40),
R = c(1:40),
N = c(1:40))
for (i in 1:40) {
y1[i,1] = ((i-1) %/% 4)+1
}
levels(y1) = c("B", "M", "TB", "TM")
for (i in 1:40) {
y1[i,2] = switch(((i-1) %% 4)+1, "B", "M", "TB", "TM")
}
for(i in 1:nrow(y)){
for (j in 1:ncol(y)) {
y1[((i-1)*4)+j-1,3] = y[i,j]
}
}
View(y1)
View(y)
View(y)
View(y1)
View(X)
View(y)
View(y1)
View(y)
y1 = data.frame(Q = c(1:40),
R = c(1:40),
N = c(1:40))
for (i in 1:40) {
y1[i,1] = ((i-1) %/% 4)+1
}
levels(y1) = c("B", "M", "TB", "TM")
for (i in 1:40) {
y1[i,2] = switch(((i-1) %% 4)+1, "B", "M", "TB", "TM")
}
for(i in 1:nrow(y)){
for (j in 1:ncol(y)) {
y1[((i-1)*4)+j,3] = y[i,j]
}
}
View(y1)
library(ggplot2)
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q)) +
geom_bar(position="dodge", stat="identity")
#--------------------------------------------------------------------------------
# AFC
X1 = X[,c(1,10)]
X1 = table(X1[,1],X1[,2])
X1
afc = CA(X1)
# imports
library(FactoMineR)
library(ggplot2)
library(factoextra)
afc = CA(X1)
fviz_screeplot (afc, addlabels = TRUE, ylim = c(0, 70)) + geom_hline (yintercept = 100*1/(ncol(X1)), linetype = 2, color = "red")
fviz_ca_biplot (afc, repel = TRUE)
fviz_ca_col (afc, col.col = "cos2",
gradient.cols = c ("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
# Contributions des lignes à la dimension 1
fviz_contrib(afc, choice = "col", axes = 1, top = 10)
# Contributions des lignes à la dimension 2
fviz_contrib(afc, choice = "col", axes = 2, top = 10)
fviz_ca_row (afc, col.row = "cos2",
gradient.cols = c ("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
summary(afcm)
#-----------------------------------------------------------------------------------
# Etude de l'AFCM
afcm = MCA(X)
summary(afcm)
# valeurs propres
vals_propres = round(get_eigenvalue(afcm),3)
View(vals_propres)
# imports
library(FactoMineR)
library(ggplot2)
library(factoextra)
# read data
X = read.csv(file.choose(),header = TRUE)
#---------------------------------------------------------------------------------------
# Data pre-proscessing
colnames(X)=c("Individue", "V1","V2","V3","V4","V5","V6","V7","V8","V9","V10")
X=X[-1]
X = X[-c(50:55),]
X = X[!apply(X == "", 1, all),]
X[, ] <- lapply(X[, ], as.character)
for(j in 1:ncol(X)){
X[j][X[j] == "++"] <- "TB"
X[j][X[j] == "+"] <- "B"
X[j][X[j] == "-"] <- "M"
X[j][X[j] == "- -"] <- "TM"
}
levels(X)[c(1,2,3,4)]=c("TB", "B", "M", "TM")
for(i in 1:ncol(X)){
levels(X[i])[c(1,2,3,4)] = c("TB", "B", "M", "TM")
}
#-----------------------------------------------------------------------------------
# Analyse statistique simple
y = data.frame(B = c(1:10),
M = c(1:10),
TB = c(1:10),
TM= c(1:10))
for(i in 1:ncol(X)){
y[i,] = table(X[i])
}
z= c(B=sum(y[1]), M=sum(y[2]), TB=sum(y[3]), TM=sum(y[4]))
pie(z, main = "Evaluation generale du BWEB",
col = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"))
y1 = data.frame(Q = c(1:40),
R = c(1:40),
N = c(1:40))
for (i in 1:40) {
y1[i,1] = ((i-1) %/% 4)+1
}
levels(y1) = c("B", "M", "TB", "TM")
for (i in 1:40) {
y1[i,2] = switch(((i-1) %% 4)+1, "B", "M", "TB", "TM")
}
for(i in 1:nrow(y)){
for (j in 1:ncol(y)) {
y1[((i-1)*4)+j,3] = y[i,j]
}
}
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q)) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R,main="sasasa", y=y1$N, x=y1$Q)) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R,addlabels=TRUE, y=y1$N, x=y1$Q)) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R,repel = TRUE,addlabels=TRUE, y=y1$N, x=y1$Q)) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q)) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q),ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q),ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q)) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q)) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
# les cos2
COS2 = round(var$cos2[,c(1,2,3)], 3)
#-----------------------------------------------------------------------------------
# vars
var = get_mca_var(afcm)
# les cos2
COS2 = round(var$cos2[,c(1,2,3)], 3)
fviz_mca_var(afcm, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal())
fviz_mca_var(afcm, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes=c(1,2))
fviz_mca_var(afcm, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes=c(1,3))
fviz_mca_var(afcm, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes=c(2,3))
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q), repel = TRUE, gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, aes(fill=y1$R, y=y1$N, x=y1$Q), repel = TRUE, gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07", "#ffffff"),
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, main="dfsaddasda",aes(fill=y1$R, y=y1$N, x=y1$Q), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
# Grouped
ggplot(y1, addlabels= TRUE,aes(fill=y1$R, y=y1$N, x=y1$Q), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
# Grouped
Reponses = y1$R
Nombre_de_personnes = y1$N
Question = y1$Q
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal())
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal())
geom_bar(position="dodge", stat="identity",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="", stat="identity",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity",top = 20)
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity", ggtheme = theme_minimal())
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question), repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question),col="#ffffff", repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question),col.col="#ffffff", repel = TRUE,
ggtheme = theme_minimal()) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Question, y=Nombre_de_personnes, x=Reponses)) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Nombre_de_personnes, y=Question, x=Reponses)) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Nombre_de_personnes, y=Reponses, x=Question)) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="left", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="buttom", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="top", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="dfsdf")
identity
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity")
source('~/TP1 Shortcut/pre_processing.R', echo=TRUE)
y1 = data.frame(Q = c(1:40),
R = c(1:40),
N = c(1:40))
for (i in 1:40) {
y1[i,1] = ((i-1) %/% 4)+1
}
levels(y1) = c("B", "M", "TB", "TM")
for (i in 1:40) {
y1[i,2] = switch(((i-1) %% 4)+1, "B", "M", "TB", "TM")
}
for(i in 1:nrow(y)){
for (j in 1:ncol(y)) {
y1[((i-1)*4)+j,3] = y[i,j]
}
}
# Grouped
Reponses = y1$R
Nombre_de_personnes = y1$N
Question = y1$Q
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity")
# Grouped
Repenses = y1$R
Nombre_de_personnes = y1$N
Question = y1$Q
ggplot(y1, aes(fill=Reponses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Repenses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Repenses, y=Nombre_de_personnes, x=Question), main = "Evaluation generale du BWEB") +
geom_bar(position="dodge", stat="identity")
ggplot(y1, aes(fill=Repenses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity", main = "Evaluation generale du BWEB")
ggplot(main = "Evaluation generale du BWEB", y1, aes(fill=Repenses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity")
###################################
tab_disj = tab.disjonctif.prop(X)
ggplot(main = "Evaluation generale du BWEB", y1, aes(fill=Repenses, y=Nombre_de_personnes, x=Question)) +
geom_bar(position="dodge", stat="identity")
fviz_mca_var(afcm, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes=c(1,2))
fviz_mca_var(afcm, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes=c(1,3))
fviz_mca_var(afcm, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes=c(2,3))
#-----------------------------------------------------------------------------------
# Les indiv
ind = get_mca_ind (afcm)
fviz_mca_ind(afcm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal())
fviz_mca_ind(afcm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal()
axes = c(2,1))
fviz_mca_ind(afcm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes = c(2,1))
fviz_mca_ind(afcm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes = c(1,3))
fviz_mca_ind(afcm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes = c(2,3))
fviz_mca_ind(afcm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes = c(2,3))
fviz_mca_ind(afcm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes = c(1,3))
pie(z, addlabels = TRUE, main = "Evaluation generale du BWEB",
col = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"))
#-----------------------------------------------------------------------------------
# Analyse statistique simple
y = data.frame(B = c(1:10),
M = c(1:10),
TB = c(1:10),
TM= c(1:10))
for(i in 1:ncol(X)){
y[i,] = table(X[i])
}
z= c(B=sum(y[1]), M=sum(y[2]), TB=sum(y[3]), TM=sum(y[4]))
pie(z, addlabels = TRUE, main = "Evaluation generale du BWEB",
col = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"))
pie(z, addlabel = TRUE, main = "Evaluation generale du BWEB",
col = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"))
a = sum(y[1:10])
View(y)
a = sum(y[1:10,])
a
a = c(sum(y[1:10,]))
a
for (i in nrow(y)) {
a[i] = sum(y[i,])
}
a
for (i in nrow(y)) {
a[i] = sum(y[,i])
}
a[i] = sum(y[i,])
for (i in nrow(y)) {
a[i] = sum(y[i,])
}
a
View(y1)
View(y)
for (i in nrow(y)) {
a[i] = sum(y[i,])
}
a = c(1:10)
for (i in nrow(y)) {
a[i] = sum(y[i,])
}
a
for (i in 1:10 {
for (i in 1:10) {
a[i] = sum(y[i,])
}
a
#--------------------------------------------------------------------------------
# AFC
X1 = X[,c(1,10)]
X1 = table(as.vector(X1[,1]),as.vector(X1[,2]))
X1
afc = CA(X1)
#-----------------------------------------------------------------------------------
# Les indiv
ind = get_mca_ind (afcm)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 15)
# Contributions des indiv à la dimension 2
fviz_contrib (afcm, choice = "ind", axes = 2, top = 15)
# Contributions des indiv à la dimension 3
fviz_contrib (afcm, choice = "ind", axes = 3, top = 15)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 40)
# Contributions des indiv à la dimension 2
fviz_contrib (afcm, choice = "ind", axes = 2, top = 40)
# Contributions des indiv à la dimension 3
fviz_contrib (afcm, choice = "ind", axes = 3, top = 40)
# Contributions des indiv à la dimension 3
fviz_contrib (afcm, choice = "ind", axes = 3, top = 100)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 100)
# Contributions des indiv à la dimension 2
fviz_contrib (afcm, choice = "ind", axes = 2, top = 100)
# Contributions des indiv à la dimension 3
fviz_contrib (afcm, choice = "ind", axes = 3, top = 100)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 100, max = 100)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 100)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 100)
# Contributions des indiv à la dimension 2
fviz_contrib (afcm, choice = "ind", axes = 2, top = 100)
# Contributions des indiv à la dimension 3
fviz_contrib (afcm, choice = "ind", axes = 3, top = 100)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 1)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 50)
# Contributions des indiv à la dimension 2
fviz_contrib (afcm, choice = "ind", axes = 2, top = 50)
# Contributions des indiv à la dimension 3
fviz_contrib (afcm, choice = "ind", axes = 3, top = 50)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 50, y=100)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 50, max.col())
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 50)
# Contributions des indiv à la dimension 1
fviz_contrib (afcm, choice = "ind", axes = 1, top = 50)
# Contributions des indiv à la dimension 2
fviz_contrib (afcm, choice = "ind", axes = 2, top = 50)
# Contributions des indiv à la dimension 3
fviz_contrib (afcm, choice = "ind", axes = 3, top = 50)
View(X)
fviz_mca_ind(afcm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes = c(2,2))
fviz_mca_ind(afcm, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal(),
axes = c(2,3))
View(X)
